{
  "published": true,
  "title": "QStash",
  "description": "QStash is a fully managed serverless queue and messaging service designed for the serverless era.",
  "date": "2022-07-18T00:00:00.000Z",
  "url": "https://upstash.com/qstash",
  "body": {
    "raw": "\nQStash is an HTTP based messaging and scheduling solution for the serverless and edge runtimes.\n\n- 100% serverless, no stateful connections required. Messages are pushed to your API.\n- At-least-once delivery guaranteed to any public API\n- Pubsub via topics\n- Delay message delivery\n- Message deduplication\n- Scheduling via CRON\n\n\nFormally, QStash is a message queue and task scheduler designed for serverless runtimes. Informally, QStash is a glue for your serverless functions.\n\nThere was a perception serverless was only good for simple tasks. Not anymore. People build powerful systems with serverless stack. Powerful systems are composed of multiple components. Communication among those components is a big engineering problem. There are already great solutions for this problem. But we think existing solutions do not fit in serverless space. Either they are too complex or not designed to work with stateless runtimes. So we want a solution which (is):\n\n- Works anywhere including serverless and edge.\n- Messaging as a service with no backend for users to run.\n- Lightweight, easy to understand, requires nothing to learn.\n- Price scales to zero.\n\nLet's talk about a real world example. We have an e-commerce app and we want to send an informational email after each purchase. We have a service (an API route) for new purchases (newPurchase) and a second service for sending emails and notifications (sendEmail). We can call the sendEmail service from the newPurchase service. But what if the call fails? Should we wait for the response and retry? What if too many calls congest the sendEmail service and the service does not respond on time? You need to handle all these cases in your newPurchase service. Moreover, when you change the contract of sendEmail service; you have to update your newPurchase service too.\n\nIf you use QStash in the above example, you simply send a request to QStash from the newPurchase service. QStash will queue the request and call the sendEmail service. If the service does not respond, QStash will retry with a backoff strategy. The latency of sendEmail service will not affect the newPurchase service, because it will not wait for a response from the sendEmail service. QStash decouples the newPurchase and sendEmail services. You can update both services independently as long as you keep the message format compatible.\n\nWith QStash, you can add delays to the requests. Send an email 3 days after the shipment to remind the customer to add a review. You can also schedule tasks. You can send the requests with a CRON expression, so it will be run repetitively.\n\n\nTo learn more about QStash, visit [upstash.com/qstash](upstash.com/qstash).\n",
    "code": "var Component=(()=>{var lr=Object.create;var M=Object.defineProperty;var ur=Object.getOwnPropertyDescriptor;var cr=Object.getOwnPropertyNames;var dr=Object.getPrototypeOf,fr=Object.prototype.hasOwnProperty;var Q=(c,a)=>()=>(a||c((a={exports:{}}).exports,a),a.exports),mr=(c,a)=>{for(var b in a)M(c,b,{get:a[b],enumerable:!0})},ke=(c,a,b,g)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let _ of cr(a))!fr.call(c,_)&&_!==b&&M(c,_,{get:()=>a[_],enumerable:!(g=ur(a,_))||g.enumerable});return c};var hr=(c,a,b)=>(b=c!=null?lr(dr(c)):{},ke(a||!c||!c.__esModule?M(b,\"default\",{value:c,enumerable:!0}):b,c)),pr=c=>ke(M({},\"__esModule\",{value:!0}),c);var Re=Q((kr,Ee)=>{Ee.exports=React});var we=Q(B=>{\"use strict\";(function(){\"use strict\";var c=Re(),a=Symbol.for(\"react.element\"),b=Symbol.for(\"react.portal\"),g=Symbol.for(\"react.fragment\"),_=Symbol.for(\"react.strict_mode\"),z=Symbol.for(\"react.profiler\"),X=Symbol.for(\"react.provider\"),H=Symbol.for(\"react.context\"),x=Symbol.for(\"react.forward_ref\"),F=Symbol.for(\"react.suspense\"),U=Symbol.for(\"react.suspense_list\"),N=Symbol.for(\"react.memo\"),A=Symbol.for(\"react.lazy\"),Ne=Symbol.for(\"react.offscreen\"),K=Symbol.iterator,Te=\"@@iterator\";function je(e){if(e===null||typeof e!=\"object\")return null;var r=K&&e[K]||e[Te];return typeof r==\"function\"?r:null}var E=c.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];Ce(\"error\",e,t)}}function Ce(e,r,t){{var n=E.ReactDebugCurrentFrame,s=n.getStackAddendum();s!==\"\"&&(r+=\"%s\",t=t.concat([s]));var l=t.map(function(i){return String(i)});l.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,l)}}var De=!1,Oe=!1,Me=!1,Fe=!1,Ue=!1,J;J=Symbol.for(\"react.module.reference\");function Ae(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===g||e===z||Ue||e===_||e===F||e===U||Fe||e===Ne||De||Oe||Me||typeof e==\"object\"&&e!==null&&(e.$$typeof===A||e.$$typeof===N||e.$$typeof===X||e.$$typeof===H||e.$$typeof===x||e.$$typeof===J||e.getModuleId!==void 0))}function Ie(e,r,t){var n=e.displayName;if(n)return n;var s=r.displayName||r.name||\"\";return s!==\"\"?t+\"(\"+s+\")\":t}function Z(e){return e.displayName||\"Context\"}function v(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case g:return\"Fragment\";case b:return\"Portal\";case z:return\"Profiler\";case _:return\"StrictMode\";case F:return\"Suspense\";case U:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case H:var r=e;return Z(r)+\".Consumer\";case X:var t=e;return Z(t._context)+\".Provider\";case x:return Ie(e,e.render,\"ForwardRef\");case N:var n=e.displayName||null;return n!==null?n:v(e.type)||\"Memo\";case A:{var s=e,l=s._payload,i=s._init;try{return v(i(l))}catch{return null}}}return null}var k=Object.assign,P=0,ee,re,te,ne,ae,oe,ie;function se(){}se.__reactDisabledLog=!0;function Ge(){{if(P===0){ee=console.log,re=console.info,te=console.warn,ne=console.error,ae=console.group,oe=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}P++}}function We(){{if(P--,P===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:k({},e,{value:ee}),info:k({},e,{value:re}),warn:k({},e,{value:te}),error:k({},e,{value:ne}),group:k({},e,{value:ae}),groupCollapsed:k({},e,{value:oe}),groupEnd:k({},e,{value:ie})})}P<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var I=E.ReactCurrentDispatcher,G;function T(e,r,t){{if(G===void 0)try{throw Error()}catch(s){var n=s.stack.trim().match(/\\n( *(at )?)/);G=n&&n[1]||\"\"}return`\n`+G+e}}var W=!1,j;{var Ye=typeof WeakMap==\"function\"?WeakMap:Map;j=new Ye}function le(e,r){if(!e||W)return\"\";{var t=j.get(e);if(t!==void 0)return t}var n;W=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var l;l=I.current,I.current=null,Ge();try{if(r){var i=function(){throw Error()};if(Object.defineProperty(i.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(i,[])}catch(y){n=y}Reflect.construct(e,[],i)}else{try{i.call()}catch(y){n=y}e.call(i.prototype)}}else{try{throw Error()}catch(y){n=y}e()}}catch(y){if(y&&n&&typeof y.stack==\"string\"){for(var o=y.stack.split(`\n`),h=n.stack.split(`\n`),d=o.length-1,f=h.length-1;d>=1&&f>=0&&o[d]!==h[f];)f--;for(;d>=1&&f>=0;d--,f--)if(o[d]!==h[f]){if(d!==1||f!==1)do if(d--,f--,f<0||o[d]!==h[f]){var p=`\n`+o[d].replace(\" at new \",\" at \");return e.displayName&&p.includes(\"<anonymous>\")&&(p=p.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&j.set(e,p),p}while(d>=1&&f>=0);break}}}finally{W=!1,I.current=l,We(),Error.prepareStackTrace=s}var w=e?e.displayName||e.name:\"\",ge=w?T(w):\"\";return typeof e==\"function\"&&j.set(e,ge),ge}function $e(e,r,t){return le(e,!1)}function Ve(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function C(e,r,t){if(e==null)return\"\";if(typeof e==\"function\")return le(e,Ve(e));if(typeof e==\"string\")return T(e);switch(e){case F:return T(\"Suspense\");case U:return T(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case x:return $e(e.render);case N:return C(e.type,r,t);case A:{var n=e,s=n._payload,l=n._init;try{return C(l(s),r,t)}catch{}}}return\"\"}var D=Object.prototype.hasOwnProperty,ue={},ce=E.ReactDebugCurrentFrame;function O(e){if(e){var r=e._owner,t=C(e.type,e._source,r?r.type:null);ce.setExtraStackFrame(t)}else ce.setExtraStackFrame(null)}function Le(e,r,t,n,s){{var l=Function.call.bind(D);for(var i in e)if(l(e,i)){var o=void 0;try{if(typeof e[i]!=\"function\"){var h=Error((n||\"React class\")+\": \"+t+\" type `\"+i+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[i]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw h.name=\"Invariant Violation\",h}o=e[i](r,i,n,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(d){o=d}o&&!(o instanceof Error)&&(O(s),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",n||\"React class\",t,i,typeof o),O(null)),o instanceof Error&&!(o.message in ue)&&(ue[o.message]=!0,O(s),m(\"Failed %s type: %s\",t,o.message),O(null))}}}var qe=Array.isArray;function Y(e){return qe(e)}function Qe(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,t=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return t}}function Be(e){try{return de(e),!1}catch{return!0}}function de(e){return\"\"+e}function fe(e){if(Be(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Qe(e)),de(e)}var S=E.ReactCurrentOwner,ze={key:!0,ref:!0,__self:!0,__source:!0},me,he,$;$={};function Xe(e){if(D.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function He(e){if(D.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Ke(e,r){if(typeof e.ref==\"string\"&&S.current&&r&&S.current.stateNode!==r){var t=v(S.current.type);$[t]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',v(S.current.type),e.ref),$[t]=!0)}}function Je(e,r){{var t=function(){me||(me=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:t,configurable:!0})}}function Ze(e,r){{var t=function(){he||(he=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:t,configurable:!0})}}var er=function(e,r,t,n,s,l,i){var o={$$typeof:a,type:e,key:r,ref:t,props:i,_owner:l};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:n}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function rr(e,r,t,n,s){{var l,i={},o=null,h=null;t!==void 0&&(fe(t),o=\"\"+t),He(r)&&(fe(r.key),o=\"\"+r.key),Xe(r)&&(h=r.ref,Ke(r,s));for(l in r)D.call(r,l)&&!ze.hasOwnProperty(l)&&(i[l]=r[l]);if(e&&e.defaultProps){var d=e.defaultProps;for(l in d)i[l]===void 0&&(i[l]=d[l])}if(o||h){var f=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;o&&Je(i,f),h&&Ze(i,f)}return er(e,o,h,s,n,S.current,i)}}var V=E.ReactCurrentOwner,pe=E.ReactDebugCurrentFrame;function R(e){if(e){var r=e._owner,t=C(e.type,e._source,r?r.type:null);pe.setExtraStackFrame(t)}else pe.setExtraStackFrame(null)}var L;L=!1;function q(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===a}function be(){{if(V.current){var e=v(V.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tr(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),t=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+t+\".\"}return\"\"}}var ve={};function nr(e){{var r=be();if(!r){var t=typeof e==\"string\"?e:e.displayName||e.name;t&&(r=`\n\nCheck the top-level render call using <`+t+\">.\")}return r}}function ye(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var t=nr(r);if(ve[t])return;ve[t]=!0;var n=\"\";e&&e._owner&&e._owner!==V.current&&(n=\" It was passed a child from \"+v(e._owner.type)+\".\"),R(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',t,n),R(null)}}function _e(e,r){{if(typeof e!=\"object\")return;if(Y(e))for(var t=0;t<e.length;t++){var n=e[t];q(n)&&ye(n,r)}else if(q(e))e._store&&(e._store.validated=!0);else if(e){var s=je(e);if(typeof s==\"function\"&&s!==e.entries)for(var l=s.call(e),i;!(i=l.next()).done;)q(i.value)&&ye(i.value,r)}}}function ar(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var t;if(typeof r==\"function\")t=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===x||r.$$typeof===N))t=r.propTypes;else return;if(t){var n=v(r);Le(t,e.props,\"prop\",n,e)}else if(r.PropTypes!==void 0&&!L){L=!0;var s=v(r);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function or(e){{for(var r=Object.keys(e.props),t=0;t<r.length;t++){var n=r[t];if(n!==\"children\"&&n!==\"key\"){R(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",n),R(null);break}}e.ref!==null&&(R(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),R(null))}}function ir(e,r,t,n,s,l){{var i=Ae(e);if(!i){var o=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var h=tr(s);h?o+=h:o+=be();var d;e===null?d=\"null\":Y(e)?d=\"array\":e!==void 0&&e.$$typeof===a?(d=\"<\"+(v(e.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):d=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",d,o)}var f=rr(e,r,t,s,l);if(f==null)return f;if(i){var p=r.children;if(p!==void 0)if(n)if(Y(p)){for(var w=0;w<p.length;w++)_e(p[w],e);Object.freeze&&Object.freeze(p)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else _e(p,e)}return e===g?or(f):ar(f),f}}var sr=ir;B.Fragment=g,B.jsxDEV=sr})()});var Se=Q((Rr,Pe)=>{\"use strict\";Pe.exports=we()});var _r={};mr(_r,{default:()=>yr,frontmatter:()=>br});var u=hr(Se()),br={title:\"QStash\",description:\"QStash is a fully managed serverless queue and messaging service designed for the serverless era.\",date:\"2022-07-18\",url:\"https://upstash.com/qstash\",published:!0};function xe(c){let a=Object.assign({p:\"p\",ul:\"ul\",li:\"li\",a:\"a\"},c.components);return(0,u.jsxDEV)(u.Fragment,{children:[(0,u.jsxDEV)(a.p,{children:\"QStash is an HTTP based messaging and scheduling solution for the serverless and edge runtimes.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:10,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.ul,{children:[`\n`,(0,u.jsxDEV)(a.li,{children:\"100% serverless, no stateful connections required. Messages are pushed to your API.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:12,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"At-least-once delivery guaranteed to any public API\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"Pubsub via topics\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:14,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"Delay message delivery\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"Message deduplication\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:16,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"Scheduling via CRON\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:17,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:12,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.p,{children:\"Formally, QStash is a message queue and task scheduler designed for serverless runtimes. Informally, QStash is a glue for your serverless functions.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:20,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.p,{children:\"There was a perception serverless was only good for simple tasks. Not anymore. People build powerful systems with serverless stack. Powerful systems are composed of multiple components. Communication among those components is a big engineering problem. There are already great solutions for this problem. But we think existing solutions do not fit in serverless space. Either they are too complex or not designed to work with stateless runtimes. So we want a solution which (is):\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:22,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.ul,{children:[`\n`,(0,u.jsxDEV)(a.li,{children:\"Works anywhere including serverless and edge.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:24,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"Messaging as a service with no backend for users to run.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"Lightweight, easy to understand, requires nothing to learn.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:26,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.li,{children:\"Price scales to zero.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:27,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:24,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.p,{children:\"Let's talk about a real world example. We have an e-commerce app and we want to send an informational email after each purchase. We have a service (an API route) for new purchases (newPurchase) and a second service for sending emails and notifications (sendEmail). We can call the sendEmail service from the newPurchase service. But what if the call fails? Should we wait for the response and retry? What if too many calls congest the sendEmail service and the service does not respond on time? You need to handle all these cases in your newPurchase service. Moreover, when you change the contract of sendEmail service; you have to update your newPurchase service too.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.p,{children:\"If you use QStash in the above example, you simply send a request to QStash from the newPurchase service. QStash will queue the request and call the sendEmail service. If the service does not respond, QStash will retry with a backoff strategy. The latency of sendEmail service will not affect the newPurchase service, because it will not wait for a response from the sendEmail service. QStash decouples the newPurchase and sendEmail services. You can update both services independently as long as you keep the message format compatible.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.p,{children:\"With QStash, you can add delays to the requests. Send an email 3 days after the shipment to remind the customer to add a review. You can also schedule tasks. You can send the requests with a CRON expression, so it will be run repetitively.\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,u.jsxDEV)(a.p,{children:[\"To learn more about QStash, visit \",(0,u.jsxDEV)(a.a,{href:\"upstash.com/qstash\",children:\"upstash.com/qstash\"},void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:36,columnNumber:35},this),\".\"]},void 0,!0,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:36,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\",lineNumber:1,columnNumber:1},this)}function vr(c={}){let{wrapper:a}=c.components||{};return a?(0,u.jsxDEV)(a,Object.assign({},c,{children:(0,u.jsxDEV)(xe,c,void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\"},this)}),void 0,!1,{fileName:\"/Users/melikbilyay/Desktop/GithubRepo/MyPortfolioSite/chronark.com/content/projects/_mdx_bundler_entry_point-3c4c86d6-a577-4507-9bd5-daaf766d7c33.mdx\"},this):xe(c)}var yr=vr;return pr(_r);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "projects/qstash.mdx",
  "_raw": {
    "sourceFilePath": "projects/qstash.mdx",
    "sourceFileName": "qstash.mdx",
    "sourceFileDir": "projects",
    "contentType": "mdx",
    "flattenedPath": "projects/qstash"
  },
  "type": "Project",
  "path": "/projects/qstash",
  "slug": "qstash"
}